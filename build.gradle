buildscript {
    ext {
        kotlin_version = '1.1.4'
        dokka_version = '0.9.15'
    }

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:latest.release'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

allprojects {
    group 'tech.pronghorn'
    version '0.1.0'

    apply plugin: 'kotlin'
    apply plugin: 'ivy-publish'
    apply plugin: 'org.jetbrains.dokka'
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'maven'
    apply plugin: 'org.junit.platform.gradle.plugin'

    repositories {
        mavenCentral()
    }

    kotlin {
        experimental {
            coroutines 'enable'
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

        testCompile 'org.junit.jupiter:junit-jupiter-engine:5.0.0'
        testCompile 'org.mockito:mockito-core:2.10.0'
    }

    publishing {
        publications {
            ivyJava(IvyPublication) {
                from components.java
            }
        }
    }

    artifactoryPublish {
        publications(publishing.publications.ivyJava)
    }


    dokka {
        moduleName = project.name
        outputFormat = 'javadoc'
        outputDirectory = "docs/${project.name}"
        processConfigurations = ['compile']
        sourceDirs = files('src/main/kotlin')
    }

    artifactory {
        contextUrl = System.properties['Artifactory']
        publish {
            repository {
                repoKey = 'libs-snapshot-local'
                username = System.properties["Username"]
                password = System.properties["Password"]
            }
            ivy {
                ivyLayout = '[organization]/[module]/ivy-[revision].xml'
                artifactLayout = '[organization]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]'
                mavenCompatible = true
            }
            defaults {
                publishBuildInfo = true
                publishArtifacts = true
                publishPom = true
                publishIvy = true
            }
        }
    }
}

project(':plugin-collections-jctools') {
    dependencies {
        compile 'org.jctools:jctools-core:2.1.0'
        compile project(':common')
    }
}

project(':plugin-hashing-openhft') {
    dependencies {
        compile 'net.openhft:zero-allocation-hashing:0.8'
        compile project(':common')
    }
}

project(':plugin-logging-slf4j') {
    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.25'
        compile project(':common')
    }
}

project(':coroutines') {
    dependencies {
        compile project(':common')
    }
}

project(':server') {
    dependencies {
        testRuntime 'ch.qos.logback:logback-classic:1.2.3'
        testCompile project(':plugin-collections-jctools')
        testCompile project(':plugin-hashing-openhft')
        testCompile project(':plugin-logging-slf4j')
        compile project(':coroutines')
    }
}
